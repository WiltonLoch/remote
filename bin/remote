#!/bin/bash
me=`which $0`
prog_name=`basename $0`
source `dirname $me`/remote-common

usage() {
  echo "Usage: $1 [-vnh] <command>"
  echo " -v: verbose"
  echo " -n: dry-run mode"
  echo " -h: print this help message"
  echo " e.g. $1 ls"
}

exit_abnormal() {
  echo "Error:" $2
  usage $1
  exit 1
}

verbosity_flag=""
dry_run_flag=""
while getopts ":vnh" opt; do
case ${opt} in
v )
  verbosity_flag="-v"
  ;;
n )
  dry_run_flag="-n"
  ;;
h ) usage $prog_name
    exit 0
esac
done
shift $((OPTIND -1))

if [[ "$@" == "" ]]; then
  exit_abnormal $prog_name "Missing command"
fi

verify_setup
local_dir=`get_local_directory`
remote_host=`get_remote_host`
remote_dir=`get_remote_directory`
remote_command_dir=`get_remote_command_directory`
random_num=$((1 + RANDOM % 1000))
cmd_file_name=.remote_cmd_${random_num}.sh

generate_command $cmd_file_name $remote_dir $remote_command_dir "$@"
ensure_synced $verbosity_flag $dry_run_flag
if [ -z $REMOTE_ALLOC_TTY ]
then
  ssh -tKq $remote_host "cd $remote_command_dir; ./$cmd_file_name"
else
  ssh -Kq $remote_host "cd $remote_command_dir; REMOTE_HOST_INDEX=$REMOTE_HOST_INDEX ./$cmd_file_name" 2>&1 | tee /tmp/$remote_host.log
fi
#cleanup local cmd file
rm -f $cmd_file_name
